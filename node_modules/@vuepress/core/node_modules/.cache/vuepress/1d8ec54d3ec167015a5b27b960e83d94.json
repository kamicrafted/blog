{"remainingRequest":"/Users/daveyoon/DigitalOcean/blog.kamicrafted.com/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/daveyoon/DigitalOcean/blog.kamicrafted.com/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/daveyoon/DigitalOcean/blog.kamicrafted.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/daveyoon/DigitalOcean/blog.kamicrafted.com/src/.vuepress/components/ArchiveList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/daveyoon/DigitalOcean/blog.kamicrafted.com/src/.vuepress/components/ArchiveList.vue","mtime":1569850675026},{"path":"/Users/daveyoon/DigitalOcean/blog.kamicrafted.com/node_modules/cache-loader/dist/cjs.js","mtime":1569850707940},{"path":"/Users/daveyoon/DigitalOcean/blog.kamicrafted.com/node_modules/babel-loader/lib/index.js","mtime":1569850707913},{"path":"/Users/daveyoon/DigitalOcean/blog.kamicrafted.com/node_modules/cache-loader/dist/cjs.js","mtime":1569850707940},{"path":"/Users/daveyoon/DigitalOcean/blog.kamicrafted.com/node_modules/vue-loader/lib/index.js","mtime":1569850708167}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.map\";\nimport _Set from \"/Users/daveyoon/DigitalOcean/blog.kamicrafted.com/node_modules/@babel/runtime-corejs2/core-js/set\";\nimport _toConsumableArray from \"/Users/daveyoon/DigitalOcean/blog.kamicrafted.com/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.array.is-array\";\nimport \"core-js/modules/es6.string.starts-with\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.array.sort\";\nexport default {\n  name: 'ArchiveList',\n  props: {\n    pages: {\n      type: Array,\n      default: []\n    }\n  },\n  data: function data() {\n    return {\n      selectedTags: []\n    };\n  },\n  computed: {\n    filteredList: function filteredList() {\n      var _this = this;\n\n      if (this.pages) {\n        return this.pages.filter(function (item) {\n          var isBlogPost = !!item.frontmatter.blog;\n          var isReadyToPublish = new Date(item.frontmatter.date) <= new Date(); // check for locales\n\n          var isCurrentLocale = true;\n\n          if (_this.$site.locales) {\n            var localePath = _this.$route.path.split('/')[1] || \"\";\n            isCurrentLocale = item.relativePath.startsWith(localePath);\n          } // check if tags contain any of the selected tags\n          // const hasTags = item.frontmatter.tags && item.frontmatter.tags.some(tag => this.selectedTags.includes(tag))\n          // check if tags contain all of the selected tags\n\n\n          var hasTags = !!item.frontmatter.tags && _this.selectedTags.every(function (tag) {\n            return item.frontmatter.tags.includes(tag);\n          });\n\n          if (!isBlogPost || !isReadyToPublish || _this.selectedTags.length > 0 && !hasTags || !isCurrentLocale) {\n            return false;\n          }\n\n          return true;\n        }).sort(function (a, b) {\n          return new Date(b.frontmatter.date) - new Date(a.frontmatter.date);\n        });\n      }\n    }\n  },\n  methods: {\n    getYears: function getYears() {\n      return _toConsumableArray(new _Set(this.filteredList.map(function (item) {\n        return new Date(item.frontmatter.date).getFullYear();\n      })));\n    },\n    getMonths: function getMonths(year) {\n      return _toConsumableArray(new _Set(this.filteredList.filter(function (item) {\n        return new Date(item.frontmatter.date).getFullYear() == year;\n      }).map(function (item) {\n        return new Date(item.frontmatter.date).getMonth();\n      })));\n    },\n    postsByDate: function postsByDate(year, month) {\n      return this.filteredList.filter(function (item) {\n        var date = new Date(item.frontmatter.date);\n        return date.getFullYear() == year && date.getMonth() == month;\n      });\n    }\n  },\n  filters: {\n    // Filter definitions\n    monthToLongName: function monthToLongName(value) {\n      var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      return months[value];\n    }\n  }\n};",{"version":3,"sources":["ArchiveList.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\nexport default {\n    name: 'ArchiveList',\n    props: {\n        pages: {\n            type: Array,\n            default: []\n        },\n    },\n    data() {\n        return {\n            selectedTags: []\n        }\n    },\n    computed: {\n        filteredList() {\n            if (this.pages) {\n                \n                return this.pages.filter(item => {\n                    const isBlogPost = !!item.frontmatter.blog\n                    const isReadyToPublish = new Date(item.frontmatter.date) <= new Date()\n                    // check for locales\n                    let isCurrentLocale = true;\n                    if(this.$site.locales) {\n                        const localePath = this.$route.path.split('/')[1] || \"\";\n                        isCurrentLocale = item.relativePath.startsWith(localePath);   \n                    }\n                    // check if tags contain any of the selected tags\n                    // const hasTags = item.frontmatter.tags && item.frontmatter.tags.some(tag => this.selectedTags.includes(tag))\n                    // check if tags contain all of the selected tags\n                    const hasTags = !!item.frontmatter.tags && this.selectedTags.every((tag) => item.frontmatter.tags.includes(tag))\n\n                    if (!isBlogPost || !isReadyToPublish || (this.selectedTags.length > 0 && !hasTags) || !isCurrentLocale){ \n                        return false\n                    }\n\n                    return true\n                    \n                })\n                .sort((a, b) => new Date(b.frontmatter.date) - new Date(a.frontmatter.date))\n            }\n        },\n    },\n    methods: {\n        getYears: function() {\n            return [...new Set(this.filteredList.map(item => new Date(item.frontmatter.date).getFullYear()))]\n        },\n\n        getMonths: function(year) {\n            return [...new Set(this.filteredList.filter(item => new Date(item.frontmatter.date).getFullYear() == year).map( item => new Date(item.frontmatter.date).getMonth()))]\n        },\n\n        postsByDate(year, month) {\n            return this.filteredList.filter(item => {\n                const date = new Date(item.frontmatter.date)\n                return date.getFullYear() == year && date.getMonth() == month\n            })\n        },\n    },\n    filters: {\n       // Filter definitions\n        monthToLongName(value) {\n            const months = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \n           \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ];\n\n           return months[value]\n        }\n    }\n}\n</script>\n\n<template>\n    <div class=\"archive\">\n        <div v-for=\"year in getYears()\">\n            <div class=\"archive-year\">{{year}}</div>\n            <div v-for=\"month in getMonths(year)\">\n                <div class=\"archive-month\">{{month | monthToLongName}}</div>\n                <ul class=\"archive-list\">\n                    <li v-for=\"(item, index) in postsByDate(year, month)\" class=\"archive-list__item\">\n                        {{new Date(item.frontmatter.date).getDate()}} - <router-link :to=\"item.path\">{{item.title}}</router-link>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</template>\n\n<style>\n.archive-list {\n\tpadding: 0;\n\tmargin: 0;\n}\n\n.archive-year {\n    font-weight: bold;\n    font-size:  32px;\n    margin: 0 0 16px 0;\n}\n\n.archive-month {\n    font-weight: bold;\n    font-size:  24px;\n    margin: 0 0 16px 16px;\n}\n\n.archive-list__item {\n\tlist-style-type: none;\n    margin: 0 0 16px 32px;\n}\n</style>\n"],"sourceRoot":"src/.vuepress/components"}]}