(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{273:function(t,a,e){"use strict";e.r(a);var s=e(1),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"installing-mdloader"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#installing-mdloader","aria-hidden":"true"}},[t._v("#")]),t._v(" Installing mdloader")]),t._v(" "),e("p",[t._v("First, we'll need to grab "),e("code",[t._v("mdloader_mac")]),t._v(" which is the macOS version of mdloader, as well as "),e("code",[t._v("applet-flash-samd51j18a.bin")]),t._v(" from "),e("a",{attrs:{href:"https://github.com/Massdrop/mdloader/releases/tag/1.0.3",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("p",[t._v("Once both files are downloaded, we'll need to put them both in the same folder (I've placed mine in "),e("code",[t._v("~/Massdrop/")]),t._v(").")]),t._v(" "),e("p",[t._v("Next, open up Terminal and run the following command to make the file executable:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" u+x mdloader_mac\n")])])]),e("h2",{attrs:{id:"using-the-drop-qmk-configurator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#using-the-drop-qmk-configurator","aria-hidden":"true"}},[t._v("#")]),t._v(" Using the Drop QMK Configurator")]),t._v(" "),e("p",[t._v("Next, we'll need to go to the web "),e("a",{attrs:{href:"https://drop.com/mechanical-keyboards/configurator/preset/ctrl--default",target:"_blank",rel:"noopener noreferrer"}},[t._v("Configurator"),e("OutboundLink")],1),t._v(" and select Default CTRL toi get started.")]),t._v(" "),e("p",[e("img",{attrs:{src:"/images/191030-configurator.jpg",alt:"Configurator screenshot"}}),t._v('\nUsing the Configurator, we can start modifying the keyboard configuration to suit our preferences. Once changes have been made, click the "Compile & Download" button. This will build and download a bin file. Move this file over to the folder containing '),e("code",[t._v("mdloader_mac")]),t._v(" that we created before.")]),t._v(" "),e("p",[e("img",{attrs:{src:"/images/191030-configurator2.jpg",alt:"Configurator screenshot"}})]),t._v(" "),e("h2",{attrs:{id:"flashing-the-ctrl-keyboard"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flashing-the-ctrl-keyboard","aria-hidden":"true"}},[t._v("#")]),t._v(" Flashing the CTRL keyboard")]),t._v(" "),e("p",[t._v("Plug in your keyboard and change directory to the folder with your files in Terminal. Next, run the following command (where [FILE_NAME] is the name of the bin file that was downloaded from the Configurator):")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("./mdloader_mac --first --download "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("FILE_NAME"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" --restart \n")])])]),e("p",[t._v("This will auto-detect the first available keyboard to flash for 60 seconds. Immediately after running the above command, use a toothpick or pin to press the reset button located below the keyboard and the LEDs will turn off. If successful, the keyboard will flash and reboot with the following output:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("Massdrop Loader "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.03")]),t._v("\n\nMassdrop Loader  Copyright "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("C"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2018")]),t._v("  Massdrop Inc.\nThis program is Free Software and has ABSOLUTELY NO WARRANTY\n\nScanning "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" device "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v(" seconds\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\nDevice port: /dev/cu.usbmodem14124201 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SAMD51J18A"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nOpening port "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/dev/cu.usbmodem14124201'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". Success"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\nFound MCU: SAMD51J18A\nBootloader version: v2.20 Mar "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2019")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(":04:47 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ctrl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nApplet file: applet-flash-samd51j18a.bin\nApplet Version: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nWriting firmware"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". Complete"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\nBooting device"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". Success"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\nClosing port"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". Success"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n")])])]),e("p",[t._v("One last thing I like to do is to take screenshots of the keymap from the web Configurator to have something to reference in case I forget the customized mapping.")])])}),[],!1,null,null,null);a.default=n.exports}}]);